---
title: "Predicting "
author: "Scott Flaska"
date: "2023-05-01"
draft: true
categories: [shotlink, golf, r]
image: ""
format: html
---

```{r}
#| output: false
library(tidyverse)
library(tidymodels)
```

First, I'll load the cleaned up shot-level data from my [previous post](https://scottflaska.github.io/blog/posts/02_shotlink_explore/).

```{r}
shot_level <- readRDS("../02_shotlink_explore/shot_level.rds")
cut_colors <- readRDS("../02_shotlink_explore/cut_colors.rds")
```

```{r}
#| warning: true
shot_level %>% 
  ggplot(mapping = aes(x = yards_out_before_shot,
                       y = strokes_remaining_before_shot)) +
  geom_jitter(width = 0,
              height = 0.1,
              alpha = 0.1) +
  geom_smooth(method = loess,
              se = FALSE) +
  scale_y_continuous(breaks = 1:10) +
  theme_minimal()

shot_level %>% 
  mutate(log_yards_out_before_shot = log(yards_out_before_shot+1)) %>% 
  ggplot(mapping = aes(x = log_yards_out_before_shot,
                       y = strokes_remaining_before_shot)) +
  geom_jitter(width = 0,
              height = 0.1,
              alpha = 0.1) +
  geom_smooth(method = loess,
              se = FALSE) +
  scale_y_continuous(breaks = 1:10) +
  theme_minimal()

shot_model_data <- shot_level %>% 
  mutate(log_yards_out_before_shot = log(yards_out_before_shot+1))
```

```{r}
folds <- group_vfold_cv(data = shot_model_data,
                        group = round)

just_log_yards_recipe <- recipe(formula = strokes_remaining_before_shot ~ 
                              log_yards_out_before_shot, 
                      data = shot_model_data)

lm_mod <- linear_reg(mode = "regression", 
                     engine = "lm")

lm_workflow <- workflow() %>%
  add_recipe(just_log_yards_recipe) %>% 
  add_model(lm_mod) 

lm_rs <- fit_resamples(object = lm_workflow,
                       resamples = folds)

lm_rs %>% 
  collect_metrics() %>% 
  select(.metric,
         mean) %>% 
  as.data.frame()

```

```{r}
# just_yards_recipe <- recipe(formula = strokes_remaining_before_shot ~ 
#                               yards_out_before_shot, 
#                             data = shot_model_data)
# 
# xgb_mod <- boost_tree(mode = "regression", 
#                       engine = "xgboost")
# 
# xgb_workflow <- workflow() %>%
#   add_recipe(just_yards_recipe) %>% 
#   add_model(xgb_mod) 
# 
# xgb_rs <- fit_resamples(object = xgb_workflow,
#                         resamples = folds)
# 
# xgb_rs %>% 
#   collect_metrics() %>% 
#   select(.metric,
#          mean) %>% 
#   as.data.frame()
```

```{r}
# shot_model_data %>% 
#   filter(player == 1810,
#          round == 1,
#          hole == 1) %>% 
#   select(shot,
#          strokes_remaining_before_shot,
#          yards_out_before_shot,
#          x,
#          y)
# 
# shot_model_data <- shot_model_data %>% 
#   group_by(player,
#            round,
#            hole) %>% 
#   mutate(x_before_shot = lag(x, 
#                              n = 1,
#                              order_by = shot),
#          y_before_shot = lag(y,
#                              n = 1,
#                              order_by = shot)) %>% 
#   ungroup()
# 
# folds <- group_vfold_cv(data = shot_model_data,
#                         group = round)
# 
# with_coords_recipe <- recipe(formula = strokes_remaining_before_shot ~ 
#                                yards_out_before_shot +
#                                x_before_shot +
#                                y_before_shot +
#                                hole, 
#                              data = shot_model_data)
# 
# xgb_workflow <- workflow() %>%
#   add_recipe(with_coords_recipe) %>% 
#   add_model(xgb_mod) 
# 
# xgb_rs <- fit_resamples(object = xgb_workflow,
#                         resamples = folds)
# 
# xgb_rs %>% 
#   collect_metrics() %>% 
#   select(.metric,
#          mean) %>% 
#   as.data.frame()
```

```{r}
# round_1_hole_1 <- shot_model_data %>% 
#   filter(!is.na(x)) %>% 
#   filter(round == 1,
#          hole == 1) %>% 
#   mutate(strokes_remaining = factor(strokes_remaining_after_shot,
#                                     ordered = T)) 
# 
# round_1_hole_1 %>% 
#   select(x,
#          y,
#          strokes_remaining) %>% 
#   ggplot(mapping = aes(x = x,
#                        y = y,
#                        color = strokes_remaining)) +
#   geom_point(size = 3) +
#   coord_equal() +
#   labs(title = "1st Hole") +
#   theme(axis.text = element_blank(),
#         axis.ticks = element_blank(),
#         axis.title = element_blank(),
#         panel.grid = element_blank())
# 
# round_1_hole_1 %>% 
#   filter(strokes_remaining == 4) %>% 
#   select(player,
#          player_first_name,
#          player_last_name,
#          shot)



```
