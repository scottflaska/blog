{
  "hash": "28d0b617ae809a9c50809d74ce1f0423",
  "result": {
    "markdown": "---\ntitle: \"Exploring PGA Shotlink Data\"\nauthor: \"Scott Flaska\"\ndate: \"2023-04-10\"\ncategories: [shotlink, golf, r, eda]\nimage: \"\"\nformat: html\n---\n\n\nLast year, I found some sample data while reading about PGA Shotlink[^1]. I decided to put together a series of posts using with this data. This first post will cover some simple data ingestion and EDA.\n\n[^1]: The data was available [here](https://www.pgatour.com/stats/shotlinkintelligence/overview.html), but it looks like it's been moved.\n\nThe sample contains 4 delimited text files: event-level, hole-level, round-level, and shot-level with. I'll start by taking a look at the shot-level data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshot_level <- read.delim(file ='shotlink_sample/StrokeLevelTOURChamp.txt')\nstr(shot_level)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t8422 obs. of  38 variables:\n $ tour_code                      : chr  \"R\" \"R\" \"R\" \"R\" ...\n $ tour_description               : chr  \"PGA TOUR\" \"PGA TOUR\" \"PGA TOUR\" \"PGA TOUR\" ...\n $ year                           : int  2011 2011 2011 2011 2011 2011 2011 2011 2011 2011 ...\n $ tourn_num                      : int  410 410 410 410 410 410 410 410 410 410 ...\n $ Player..                       : int  1810 1810 1810 1810 1810 1810 1810 1810 1810 1810 ...\n $ Course..                       : int  688 688 688 688 688 688 688 688 688 688 ...\n $ Permanent.Tournament..         : int  60 60 60 60 60 60 60 60 60 60 ...\n $ Player.First.Name              : chr  \"Phil\" \"Phil\" \"Phil\" \"Phil\" ...\n $ Player.Last.Name               : chr  \"Mickelson\" \"Mickelson\" \"Mickelson\" \"Mickelson\" ...\n $ Round                          : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Tournament.Name                : chr  \"TOUR Championship by Coca-Cola\" \"TOUR Championship by Coca-Cola\" \"TOUR Championship by Coca-Cola\" \"TOUR Championship by Coca-Cola\" ...\n $ Course.Name                    : chr  \"East Lake GC\" \"East Lake GC\" \"East Lake GC\" \"East Lake GC\" ...\n $ Hole                           : int  1 1 1 1 2 2 3 3 3 3 ...\n $ Hole.Score                     : int  4 4 4 4 2 2 4 4 4 4 ...\n $ Par.Value                      : int  4 4 4 4 3 3 4 4 4 4 ...\n $ Yardage                        : int  424 424 424 424 214 214 387 387 387 387 ...\n $ Shot                           : int  1 2 3 4 1 2 1 2 3 4 ...\n $ Shot.Type.S.P.D.               : chr  \"S\" \"S\" \"S\" \"S\" ...\n $ X..of.Strokes                  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ From.Location.Scorer.          : chr  \"Tee Box\" \"Primary Rough\" \"Green\" \"Green\" ...\n $ From.Location.Laser.           : chr  \"\" \"Right Rough\" \"Unknown\" \"Unknown\" ...\n $ To.Location.Scorer.            : chr  \"Primary Rough\" \"Green\" \"Green\" \"\" ...\n $ To.Location.Laser.             : chr  \"Right Rough\" \"Unknown\" \"Unknown\" \"\" ...\n $ Distance                       : int  10677 4932 326 39 7727 231 10069 3309 150 14 ...\n $ Distance.to.Pin                : int  15444 4788 281 39 7812 231 13464 3440 132 14 ...\n $ In.the.Hole.Flag               : chr  \"N\" \"N\" \"N\" \"Y\" ...\n $ Around.the.Green.Flag          : chr  \"N\" \"N\" \"N\" \"N\" ...\n $ X1st.Putt.Flag                 : chr  \"\" \"\" \"Y\" \"\" ...\n $ Distance.to.Hole.after.the.Shot: int  4788 281 39 0 231 0 3440 132 14 0 ...\n $ Time                           : int  1255 1300 1304 1305 1307 1312 1315 1320 1324 1324 ...\n $ Lie                            : chr  \"Good\" \"N/A\" \"Good\" \"Good\" ...\n $ Elevation                      : chr  \"With\" \"With\" \"With\" \"With\" ...\n $ Slope                          : chr  \"Level\" \"Level\" \"Level\" \"Level\" ...\n $ X.Coordinate                   : chr  \"9,093.97\" \"8,683.75\" \"8,697.45\" \"0\" ...\n $ Y.Coordinate                   : chr  \"9,859.90\" \"9,868.71\" \"9,845.29\" \"0\" ...\n $ Z.Coordinate                   : num  480 504 504 0 491 ...\n $ Distance.from.Center           : int  562 232 33 0 214 0 127 15 2 0 ...\n $ Distance.from.Edge             : int  126 25 199 0 347 0 344 32 140 0 ...\n```\n:::\n:::\n\n\nThis table has a ton of interesting fields to explore, but first I want to clean up the column names - the [`janitor`](https://sfirke.github.io/janitor/) package makes this really easy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshot_level_clean <- shot_level %>% \n  janitor::clean_names() %>% \n  rename(num_of_strokes = x_of_strokes,\n         first_putt_flag = x1st_putt_flag)\n\nshot_level_clean %>% \n  colnames() %>% \n  head(10) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"tour_code\"            \"tour_description\"     \"year\"                \n [4] \"tourn_num\"            \"player\"               \"course\"              \n [7] \"permanent_tournament\" \"player_first_name\"    \"player_last_name\"    \n[10] \"round\"               \n```\n:::\n:::\n\n\nNext, I'd like to get a feel for the scope of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#How many tournaments?\nshot_level_clean %>% \n  select(year, tournament_name, round) %>% \n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  year                tournament_name round\n1 2011 TOUR Championship by Coca-Cola     1\n2 2011 TOUR Championship by Coca-Cola     2\n3 2011 TOUR Championship by Coca-Cola     3\n4 2011 TOUR Championship by Coca-Cola     4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#How many players?\nshot_level_clean %>% \n  select(player,\n         player_first_name,\n         player_last_name) %>% \n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   player player_first_name player_last_name\n1    1810              Phil        Mickelson\n2    2206             David             Toms\n3    6527             Steve         Stricker\n4    6567             Vijay            Singh\n5   20645              John           Senden\n6   21731           Fredrik         Jacobson\n7   21878              Mark           Wilson\n8   21961           Charles       Howell III\n9   22046             Geoff           Ogilvy\n10  22371             Aaron         Baddeley\n11  22405            Justin             Rose\n12  23108              Matt           Kuchar\n13  23623                Bo         Van Pelt\n14  23983              Luke           Donald\n15  24357              K.J.             Choi\n16  24502              Adam            Scott\n17  24663              Y.E.             Yang\n18  24781            Hunter            Mahan\n19  24924              Bill             Haas\n20  24925          Jonathan             Byrd\n21  25686             Jason           Dufner\n22  25804             Bubba           Watson\n23  26476              Chez           Reavie\n24  27095              Nick           Watney\n25  27649            Brandt         Snedeker\n26  28089             Jason              Day\n27  29221              Webb          Simpson\n28  30925            Dustin          Johnson\n29  31323              Gary         Woodland\n30  33141            Keegan          Bradley\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Player scores?\nshot_level_clean %>% \n  group_by(player,\n           player_first_name,\n           player_last_name,\n           round) %>% \n  summarize(shots = n(),\n            .groups = \"keep\") %>% \n  ungroup() %>% \n  mutate(round = paste0(\"round_\",round)) %>% \n  pivot_wider(names_from = round,\n              values_from = shots) %>% \n  as.data.frame() %>% \n  mutate(final_score = round_1 + round_2 + round_3 + round_4) %>% \n  arrange(final_score) %>% \n  select(-player, -player_first_name) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  player_last_name round_1 round_2 round_3 round_4 final_score\n1            Mahan      67      68      66      71         272\n2           Donald      66      68      70      69         273\n3             Choi      68      65      70      70         273\n4             Haas      68      67      70      68         273\n5         Baddeley      68      70      64      73         275\n6            Scott      67      65      75      68         275\n```\n:::\n:::\n\n\nAt first glance, the data looks straightforward: one row for every stroke in the [2011 FedEx Cup Playoffs](https://en.wikipedia.org/wiki/2011_FedEx_Cup_Playoffs), with Hunter Mahan defeating the field of 30 with a final score of 272. However, a quick Google search shows that Bill Haas actually won the tournament in a playoff over Hunter Mahan. Referencing the [docs](https://github.com/scottflaska/blog/tree/development/posts/shotlink_explore/shotlink_sample), the number of strokes assessed actually comes from the `# of Strokes`[^2] column (renamed to `num_of_strokes` above) to account for drops and penalties.\n\n[^2]: `# of Strokes` (1 digit numeric): The number of strokes assessed for this shot. In most cases, this will be '1', but it may be '0' for a drop or '2' for a 2-stroke penalty.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshot_level_clean %>% \n  group_by(player,\n           player_first_name,\n           player_last_name,\n           round) %>% \n  summarize(shots = sum(num_of_strokes),\n            .groups = \"keep\") %>% \n  ungroup() %>% \n  mutate(round = paste0(\"round_\",round)) %>% \n  pivot_wider(names_from = round,\n              values_from = shots) %>% \n  as.data.frame() %>% \n  mutate(final_score = round_1 + round_2 + round_3 + round_4) %>% \n  arrange(final_score) %>% \n  select(-player, -player_first_name) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  player_last_name round_1 round_2 round_3 round_4 final_score\n1            Mahan      67      68      66      71         272\n2             Haas      68      67      69      68         272\n3         Baddeley      68      69      64      72         273\n4           Donald      66      68      70      69         273\n5             Choi      68      65      70      70         273\n6       Howell III      67      71      68      68         274\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}